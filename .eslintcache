[{"/Users/Giant/Desktop/hello-world/src/index.js":"1","/Users/Giant/Desktop/hello-world/src/reportWebVitals.js":"2","/Users/Giant/Desktop/hello-world/src/App.js":"3","/Users/Giant/Desktop/hello-world/src/HelloWorld/index.js":"4","/Users/Giant/Desktop/hello-world/src/Count/index.js":"5","/Users/Giant/Desktop/hello-world/src/Progress/index.js":"6","/Users/Giant/Desktop/hello-world/src/ProgressBar/index.js":"7","/Users/Giant/Desktop/hello-world/src/Number/index.js":"8","/Users/Giant/Desktop/hello-world/src/CustomerHook/index.js":"9"},{"size":785,"mtime":1613629835210,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1610604164223,"results":"12","hashOfConfig":"11"},{"size":1041,"mtime":1613630643124,"results":"13","hashOfConfig":"11"},{"size":204,"mtime":1611815213284,"results":"14","hashOfConfig":"11"},{"size":782,"mtime":1612419989134,"results":"15","hashOfConfig":"11"},{"size":815,"mtime":1612426041767,"results":"16","hashOfConfig":"11"},{"size":1190,"mtime":1614244121794,"results":"17","hashOfConfig":"11"},{"size":865,"mtime":1613631205482,"results":"18","hashOfConfig":"11"},{"size":1537,"mtime":1614244121793,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"61po9k",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"23"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"23"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"23"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Giant/Desktop/hello-world/src/index.js",["43"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport HelloWorld from \"./HelloWorld/\";\nimport Count from \"./Count\";\n\nconst name = \"Hello\";\nconst click = () => {\n  return alert(\"HI~~\");\n};\nconst Name2 = () => <div>123</div>;\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <div>-----------------</div>\n    <HelloWorld name={name} fun={click}>\n      <Name2 />\n    </HelloWorld>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["44","45"],"/Users/Giant/Desktop/hello-world/src/reportWebVitals.js",[],"/Users/Giant/Desktop/hello-world/src/App.js",[],"/Users/Giant/Desktop/hello-world/src/HelloWorld/index.js",[],"/Users/Giant/Desktop/hello-world/src/Count/index.js",["46"],"import { useEffect, useState } from \"react\";\n\nconst Count = () => {\n  const [value, setValue] = useState(0);\n  const [value1, setValue1] = useState(0);\n  let interval;\n  // 當你在重新render的時候都會執行，可以指定當哪些直變化才執行\n  useEffect(() => {\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    interval = setInterval(() => {\n      console.log(\"interval\");\n    }, 1000);\n    return () => {\n      console.log(123);\n      clearInterval(interval);\n    };\n  }, []);\n  // [] 沒指定只會跑一次，並且會onDestory\n\n  return (\n    <div>\n      <button onClick={() => setValue((value) => value + 1)}>{value}</button>\n      <button onClick={() => setValue1((value1) => value1 + 1)}>123</button>\n    </div>\n  );\n};\n\nexport default Count;\n","/Users/Giant/Desktop/hello-world/src/Progress/index.js",["47","48"],"import { useEffect, useState } from \"react\";\n\nlet interval;\nconst Progress = (props) => {\n  const [percentage, setPercentage] = useState(props.value);\n\n  useEffect(() => {\n    if (percentage < props.value) {\n      interval = setInterval(() => {\n        setPercentage((value) => value + 1);\n      }, 100);\n    } else if (percentage > props.value) {\n      interval = setInterval(() => {\n        setPercentage((value) => value - 1);\n      }, 100);\n    }\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [props.value, percentage]);\n  // 如果useEffect裡面有用的的參數就一定要加\n\n  return (\n    <div>\n      <div>{percentage}</div>\n      <button onClick={() => props.click(90)}>90</button>\n      <button onClick={() => props.click(10)}>10</button>\n    </div>\n  );\n};\n\nexport default Progress;\n","/Users/Giant/Desktop/hello-world/src/ProgressBar/index.js",["49"],"import React, { useState } from \"react\";\nimport useNumberHook from \"../CustomerHook\";\n// import { useEffect, useState } from \"react\";\n\n// let setTimeoutFtn;\nconst ProgressBar = () => {\n  // const [percentage, setPercentage] = useState(50);\n  // const [value, setValue] = useState(10);\n\n  // useEffect(() => {\n  //   if (percentage < value) {\n  //     setTimeoutFtn = setTimeout(() => {\n  //       setPercentage((value) => value + 1);\n  //     }, 100);\n  //   } else if (percentage > value) {\n  //     setTimeoutFtn = setTimeout(() => {\n  //       setPercentage((value) => value - 1);\n  //     }, 100);\n  //   }\n\n  //   return () => {\n  //     clearTimeout(setTimeoutFtn);\n  //   };\n  // }, [value, percentage]);\n\n  const [percent, setTarget, colorReducer] = useNumberHook(50);\n\n  return (\n    <div>\n      <div style={{ width: 500, height: 50, ...colorReducer }}>\n        <div\n          style={{\n            width: `${percent}%`,\n            height: \"100%\",\n            background: \"#222\",\n          }}\n        ></div>\n      </div>\n      <button onClick={() => setTarget(90)}>90</button>\n      <button onClick={() => setTarget(10)}>10</button>\n    </div>\n  );\n};\nexport default ProgressBar;\n","/Users/Giant/Desktop/hello-world/src/Number/index.js",[],"/Users/Giant/Desktop/hello-world/src/CustomerHook/index.js",[],{"ruleId":"50","severity":1,"message":"51","line":7,"column":8,"nodeType":"52","messageId":"53","endLine":7,"endColumn":13},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"50","severity":1,"message":"58","line":5,"column":10,"nodeType":"52","messageId":"53","endLine":5,"endColumn":16},{"ruleId":"59","severity":1,"message":"60","line":8,"column":11,"nodeType":"61","messageId":"62","endLine":8,"endColumn":12},{"ruleId":"59","severity":1,"message":"60","line":8,"column":24,"nodeType":"61","messageId":"62","endLine":8,"endColumn":26},{"ruleId":"50","severity":1,"message":"63","line":1,"column":17,"nodeType":"52","messageId":"53","endLine":1,"endColumn":25},"no-unused-vars","'Count' is defined but never used.","Identifier","unusedVar","no-native-reassign",["64"],"no-negated-in-lhs",["65"],"'value1' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '<' and '<='.","BinaryExpression","unexpectedMixedOperator","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]